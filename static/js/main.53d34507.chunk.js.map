{"version":3,"sources":["helpers/words.js","components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notifications.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["exports","words","Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","id","split","includes","Notifications","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","require","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53d34507.chunk.js","sourcesContent":["exports.words = [\r\n  'ironman',\r\n  'thorofasgard',\r\n  'tonystark',\r\n  'avengers',\r\n  'blackwidow',\r\n  'captainamerica',\r\n  'theincrediblehulk',\r\n  'doctorstrange',\r\n  'hawkeye',\r\n  'blackpanther',\r\n  'spiderman',\r\n  'antman',\r\n  'quantamrealm',\r\n  'theageofultron',\r\n  'endgame',\r\n  'infinitywar',\r\n  'starlord',\r\n  'iamgroot',\r\n  'guardiansofthegalaxy',\r\n  'thesuicidesquad',\r\n  'wolverine',\r\n];\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Hangman | MARVEL</h1>\r\n      <p>Find the hidden word from the MCU - Enter a letter</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length;\r\n\r\n  return (\r\n    <svg height='250' width='200' className='figure-container'>\r\n      {/* <!-- Rod --> */}\r\n      <line x1='60' y1='20' x2='140' y2='20' />\r\n      <line x1='140' y1='20' x2='140' y2='50' />\r\n      <line x1='60' y1='20' x2='60' y2='230' />\r\n      <line x1='20' y1='230' x2='100' y2='230' />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 && <circle cx='140' cy='70' r='20' />}\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 && <line x1='140' y1='90' x2='140' y2='150' />}\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 && <line x1='140' y1='120' x2='120' y2='100' />}\r\n      {errors > 3 && <line x1='140' y1='120' x2='160' y2='100' />}\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 && <line x1='140' y1='150' x2='120' y2='180' />}\r\n      {errors > 5 && <line x1='140' y1='150' x2='160' y2='180' />}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Figure;\r\n","import React from 'react';\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <div className='wrong-letters-container'>\r\n      <div>\r\n        {wrongLetters.length > 0 && <p>Wrong</p>}\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, ', ', curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrongLetters;\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  return (\r\n    <div className='word' id='word'>\r\n      {selectedWord.split('').map((letter, i) => {\r\n        return (\r\n          <span className='letter' key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React from 'react';\r\n\r\nconst Notifications = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification && 'show'}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win';\r\n\r\n  //check for win\r\n  word.split('').forEach((letter) => {\r\n    if (!correct.includes(letter)) {\r\n      status = '';\r\n    }\r\n  });\r\n\r\n  //check for lose\r\n  if (wrong.length === 6) status = 'lose';\r\n\r\n  return status;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { checkWin } from '../helpers/helpers';\r\n\r\nconst Popup = ({\r\n  correctLetters,\r\n  wrongLetters,\r\n  selectedWord,\r\n  setPlayable,\r\n  playAgain,\r\n}) => {\r\n  let finalMessage = '';\r\n  let finalMessageRevealWord = '';\r\n  let playable = true;\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n    finalMessage = 'Congratulations! You won! ðŸ˜€';\r\n    playable = false;\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\r\n    finalMessage = 'Unfortunately you lost. ðŸ˜•';\r\n    finalMessageRevealWord = `... the word was: ${selectedWord}`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => setPlayable(playable));\r\n\r\n  return (\r\n    <div\r\n      className='popup-container'\r\n      style={finalMessage !== '' ? { display: 'flex' } : {}}\r\n    >\r\n      <div className='popup'>\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notifications from './components/Notifications';\nimport Popup from './components/Popup';\nimport { showNotification as show } from './helpers/helpers';\nimport './App.css';\nconst data = require('./helpers/words.js');\nconst { words } = data;\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((correctLetters) => [...correctLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((wrongLetters) => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  const playAgain = () => {\n    setPlayable(true);\n\n    //Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  };\n\n  return (\n    <>\n      <Header />\n      <div className='game-container'>\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notifications showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}